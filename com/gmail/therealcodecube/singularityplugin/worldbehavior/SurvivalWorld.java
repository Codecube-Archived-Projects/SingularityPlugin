package com.gmail.therealcodecube.singularityplugin.worldbehavior;

import org.bukkit.Bukkit;
import org.bukkit.GameMode;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import sonarbeserk.github.io.inventoryserializer.InventorySerializer;

import com.gmail.therealcodecube.singularityplugin.player.SPlayer;
import com.gmail.therealcodecube.singularityplugin.sql.DefaultTables;
import com.gmail.therealcodecube.singularityplugin.sql.SQLValue;

public class SurvivalWorld extends WorldBehavior 
{
	public SurvivalWorld ( World w )
	{
		super ( w );
	}
	
	@Override
	public void init ( )
	{
		//Set spawn location
		if ( spawn == null )
		{
			spawn = new Location ( getWorld ( ), 23, 71, -14 );
		}
	}
	
	@Override
	//Take the player's serialized inventory and de-serialize it.
	public void joinWorld ( SPlayer p )
	{
		super.joinWorld ( p );
		p.getPlayer ( ).setGameMode ( GameMode.SURVIVAL );
		p.clearInventory ( );
		Player r = p.getPlayer ( );
		String serializedContents = DefaultTables.players.getProperty ( r.getName ( ) , "survival_inventory" ).getStringValue ( );
		ItemStack[] items;
		try 
		{
			items = InventorySerializer.deserializeItemStacks ( serializedContents );
			p.getPlayer ( ).getInventory ( ).setContents ( items );
		} 
		catch (Exception e) 
		{
			//Usually exceptions are generated by having a blank string as a serialized inventory.
			//So, we should clear the player's inventory.
			p.getPlayer ( ).getInventory ( ).clear ( );
		}
	}
	
	@Override
	//Serialize the player's inventory for future reference.
	public void leaveWorld ( SPlayer p )
	{
		super.leaveWorld ( p );
		Player r = p.getPlayer ( );
		ItemStack [ ] items = r.getInventory ( ).getContents ( );
		String serializedContents;
		try 
		{
			serializedContents = InventorySerializer.serializeItemStacks ( items );
			DefaultTables.players.setProperty ( r.getName ( ), "survival_inventory", new SQLValue ( serializedContents ) );
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
	}
	
	@Override
	public World getWorld ( ) { return Bukkit.getServer ( ).getWorld ( "survival" ); }
}
